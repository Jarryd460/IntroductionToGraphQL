type: collection.insomnia.rest/5.0
name: Introduction To GraphQL
meta:
  id: wrk_0dbd329c66cd40a0b832cfd400c1c7ad
  created: 1721909189121
  modified: 1750149560644
  description: ""
collection:
  - url: https://localhost:7098/graphql
    name: Mutation - AddBook and AddAuthor
    meta:
      id: req_873d360680424e378cad5cb25827f4eb
      created: 1749461628288
      modified: 1750325983496
      isPrivate: false
      description: ""
      sortKey: -1749461628288
    method: POST
    body:
      mimeType: application/graphql
      text: '{"query":"mutation AddAuthorAndBookMutation {\n\taddAuthor(input: {
        author: { name: \"Dummy 8\"}})\n\t{\n\t\tauthor
        {\n\t\t\tid,\n\t\t\tname\n\t\t},\n\t\terrors {\n\t\t\t... on
        AuthorWithNameExistsError
        {\n\t\t\t\tmessage\n\t\t\t}\n\t\t}\n\t},\n\taddBook(input: { book: {
        title: \"Dummy me 8\", price: 100, authorId: 2}})\n\t{\n\t\tbook
        {\n\t\t\tid,\n\t\t\ttitle\n\t\t},\n\t\terrors {\n\t\t\t... on
        BookWithTitleExistsError
        {\n\t\t\t\tmessage\n\t\t\t}\n\t\t}\n\t}\n}","operationName":"AddAuthorAndBookMutation","variables":{"id":3}}'
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: https://localhost:7098/graphql
    name: Query - Books
    meta:
      id: req_aac5b0b0546e4ee4b7b3ccd47aa72aa9
      created: 1750147833089
      modified: 1750167011713
      isPrivate: false
      description: ""
      sortKey: -1735685411846
    method: POST
    body:
      mimeType: application/graphql
      text: '{"query":"query querybooks {\n\tbooks(first: 5) {\n\t\tpageInfo
        {\n\t\t\thasNextPage,\n\t\t\thasPreviousPage,\n\t\t\tstartCursor,\n\t\t\tendCursor\n\t\t},\n\t\tedges
        {\n\t\t\tcursor,\n\t\t\tnode
        {\n\t\t\t\tid,\n\t\t\t\ttitle,\n\t\t\t\tprice,\n\t\t\t\tauthor
        {\n\t\t\t\t\tid,\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tnodes
        {\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tprice,\n\t\t\tauthor
        {\n\t\t\t\tid,\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n}","operationName":"querybooks","variables":{"id":3}}'
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: https://localhost:7098/graphql
    name: Mutation - UpdateBook
    meta:
      id: req_99804a7fa7f3477485b9fe51b871d5b3
      created: 1750147972561
      modified: 1750324584670
      isPrivate: false
      description: ""
      sortKey: -1742573520067
    method: POST
    body:
      mimeType: application/graphql
      text: '{"query":"mutation updateBookMutation {\n\tupdateBook(input: { id: 1006,
        updatedBook: { title: \"My Monday 2\", authorId: 10, price: 400
        }})\n\t{\n\t\tbook
        {\n\t\t\tid,\n\t\t\ttitle\n\t\t}\n\t}\n}","operationName":"updateBookMutation","variables":{"id":3}}'
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: https://localhost:7098/graphql
    name: Query - Authors
    meta:
      id: req_602fdfdcdf234a0bb9b706697842a14f
      created: 1750148541512
      modified: 1750234032963
      isPrivate: false
      description: ""
      sortKey: -1728797303625
    method: POST
    body:
      mimeType: application/graphql
      text: '{"query":"query authorsQuery {\n\tauthors(first: 5, after: \"NA==\"
        order: { name: ASC}) {\n\t\tpageInfo
        {\n\t\t\thasNextPage,\n\t\t\thasPreviousPage,\n\t\t\tstartCursor,\n\t\t\tendCursor\n\t\t},\n\t\tedges
        {\n\t\t\tcursor,\n\t\t\tnode
        {\n\t\t\t\tid,\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t\tnodes
        {\n\t\t\tid,\n\t\t\tname\n\t\t}\n\t}\n}","operationName":"authorsQuery","variables":{"id":3}}'
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: https://localhost:7098/graphql
    name: Mutation - UpdateAuthor
    meta:
      id: req_3d9033195dd84565b4c35cbea0fe79c6
      created: 1750149636959
      modified: 1750238106580
      isPrivate: false
      description: ""
      sortKey: -1732241357735.5
    method: POST
    body:
      mimeType: application/graphql
      text: '{"query":"mutation updateAuthorMutation {\n\tupdateAuthor(input: { id:
        1007, updatedAuthor: { name: \"Jarryd Deane\"}})\n\t{\n\t\tauthor
        {\n\t\t\tid,\n\t\t\tname\n\t\t},\n\t\terrors {\n\t\t\t... on
        AuthorNotFoundError {\n\t\t\t\tmessage\n\t\t\t},\n\t\t\t... on
        AuthorWithNameExistsError
        {\n\t\t\t\tmessage\n\t\t\t}\n\t\t}\n\t}\n}","operationName":"updateAuthorMutation","variables":{"id":3}}'
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: https://localhost:7098/graphql
    name: Mutation - DeleteAuthor
    meta:
      id: req_5d52b5481cbf47d194895be94af671e9
      created: 1750149745245
      modified: 1750162935137
      isPrivate: false
      description: ""
      sortKey: -1730519330680.25
    method: POST
    body:
      mimeType: application/graphql
      text: '{"query":"mutation deleteAuthorMutation {\n\tdeleteAuthor(input: { id:
        1008})\n\t{\n\t\tboolean\n\t}\n}","operationName":"deleteAuthorMutation","variables":{"id":3}}'
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: https://localhost:7098/graphql
    name: Mutation - DeleteBook
    meta:
      id: req_69bd7caf0d3a4582840f6c00dbebe190
      created: 1750149892144
      modified: 1750162979948
      isPrivate: false
      description: ""
      sortKey: -1739129465956.5
    method: POST
    body:
      mimeType: application/graphql
      text: '{"query":"mutation updateBookMutation {\n\tdeleteBook(input: { id: 1005
        })\n\t{\n\t\tboolean\n\t}\n}","operationName":"updateBookMutation","variables":{"id":3}}'
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: https://localhost:7098/graphql
    name: Query - Book
    meta:
      id: req_075487f8bfd649f4af5ca59492f5acfe
      created: 1750150138309
      modified: 1750167638842
      isPrivate: false
      description: ""
      sortKey: -1733963384790.75
    method: POST
    body:
      mimeType: application/graphql
      text: '{"query":"query singleBook($id: ID!) {\n  book(id: $id)
        {\n\t\tid,\n    price,\n\t\tauthor
        {\n\t\t\tid,\n\t\t\tname\n\t\t}\n  }\n}","operationName":"singleBook","variables":{"id":2}}'
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: https://localhost:7098/graphql
    name: Query - Author
    meta:
      id: req_8ae7120cce86461286e61fa0e68745c3
      created: 1750154016655
      modified: 1750243381856
      isPrivate: false
      description: ""
      sortKey: -1714989928915.625
    method: POST
    body:
      mimeType: application/graphql
      text: '{"query":"query singleAuthor($id: ID!) {\n  author(id: $id)
        {\n\t\tid,\n\t\tname,\n\t\tbooks
        {\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tprice,\n\t\t\tauthorId\n\t\t}\n  }\n}","variables":{"id":2},"operationName":"singleAuthor"}'
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: wss://localhost:7098/graphql
    name: Subscription - BookAdded
    meta:
      id: req_521eed3ec41c4958a5e87291a5083167
      created: 1750323628201
      modified: 1750326056199
      isPrivate: false
      description: ""
      sortKey: -1710847716502.8125
    method: POST
    body:
      mimeType: application/graphql
      text: "{\"query\":\"#this is an example subscription which connects using
        websockets. It doesn't work in Insomnia but if you copy and execute the
        below example into Nitro https://localhost:7098/graphql/ and then add a
        book using the addBook mutation this subscription will return the book
        that was added. The connection stays open until we close it so multiple
        addBook mutations can be executed and this subscription will return the
        books added\\n\\n#Since version 10 something. Support has been
        added\\n\\nsubscription {\\n\\tbookAdded
        {\\n\\t\\ttitle,\\n\\t\\tauthorId,\\n\\t\\tprice\\n\\t}\\n}\",\"variabl\
        es\":{}}"
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: ""
    name: New Request
    meta:
      id: req_78902bf1574d4de389d97f2bcc8af7b6
      created: 1750324386794
      modified: 1750324386794
      isPrivate: false
      description: ""
      sortKey: -1750324386794
    method: POST
    body:
      mimeType: application/graphql
      text: ""
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: wss://localhost:7098/graphql
    name: Subscription - BookUpdated
    meta:
      id: req_7e467fe25354457ebcb670c025b9188b
      created: 1750324993837
      modified: 1750326139699
      isPrivate: false
      description: ""
      sortKey: -1708776610296.4062
    method: POST
    body:
      mimeType: application/graphql
      text: "{\"query\":\"#this is an example subscription which connects using
        websockets. It doesn't work in Insomnia but if you copy and execute the
        below example into Nitro https://localhost:7098/graphql/ and then update
        a book using the updateBook mutation this subscription will return the
        book that was updated. The connection stays open until we close it so
        multiple updateBook mutations can be executed and this subscription will
        return the books updated. This mutation takes in a authorId as it only
        wants to be notified of books updated for a particular
        author\\n\\n#Since version 10 something. Support has been
        added\\n\\nsubscription {\\n  bookUpdated(authorId: 10)
        {\\n    title\\n  }\\n}\",\"variables\":{}}"
    headers:
      - name: User-Agent
        value: insomnia/2023.5.8
      - name: Content-Type
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
cookieJar:
  name: Default Jar
  meta:
    id: jar_27d20026967abd55a4a36965fade325d9f0efd24
    created: 1721909189132
    modified: 1721909189132
environments:
  name: Base Environment
  meta:
    id: env_27d20026967abd55a4a36965fade325d9f0efd24
    created: 1721909189129
    modified: 1721909189129
    isPrivate: false
