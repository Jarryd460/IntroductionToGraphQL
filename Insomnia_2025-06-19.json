{"_type":"export","__export_format":4,"__export_date":"2025-06-19T09:31:35.639Z","__export_source":"insomnia.desktop.app:v2023.5.8","resources":[{"_id":"ws-req_12d92cf3d56d4bbdae6f76794a3d8625","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750325159913,"created":1750325149050,"name":"New WebSocket Request","url":"wss://localhost:7098/graphql","metaSortKey":-1750325149050,"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"}],"authentication":{},"parameters":[],"settingEncodeUrl":true,"settingStoreCookies":true,"settingSendCookies":true,"settingFollowRedirects":"global","description":"","_type":"websocket_request"},{"_id":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","parentId":null,"modified":1750149560644,"created":1721909189121,"name":"Introduction To GraphQL","description":"","scope":"collection","_type":"workspace"},{"_id":"req_78902bf1574d4de389d97f2bcc8af7b6","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750324386794,"created":1750324386794,"url":"","name":"New Request","description":"","method":"POST","body":{"mimeType":"application/graphql","text":""},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1750324386794,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_873d360680424e378cad5cb25827f4eb","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750325190337,"created":1749461628288,"url":"https://localhost:7098/graphql","name":"Mutation - AddBook and AddAuthor","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation AddAuthorAndBookMutation {\\n\\taddAuthor(input: { author: { name: \\\"Dummy 6\\\"}})\\n\\t{\\n\\t\\tauthor {\\n\\t\\t\\tid,\\n\\t\\t\\tname\\n\\t\\t},\\n\\t\\terrors {\\n\\t\\t\\t... on AuthorWithNameExistsError {\\n\\t\\t\\t\\tmessage\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\taddBook(input: { book: { title: \\\"Dummy me 6\\\", price: 100, authorId: 2}})\\n\\t{\\n\\t\\tbook {\\n\\t\\t\\tid,\\n\\t\\t\\ttitle\\n\\t\\t},\\n\\t\\terrors {\\n\\t\\t\\t... on BookWithTitleExistsError {\\n\\t\\t\\t\\tmessage\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\",\"operationName\":\"AddAuthorAndBookMutation\",\"variables\":{\"id\":3}}"},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1749461628288,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_99804a7fa7f3477485b9fe51b871d5b3","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750324584670,"created":1750147972561,"url":"https://localhost:7098/graphql","name":"Mutation - UpdateBook","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation updateBookMutation {\\n\\tupdateBook(input: { id: 1006, updatedBook: { title: \\\"My Monday 2\\\", authorId: 10, price: 400 }})\\n\\t{\\n\\t\\tbook {\\n\\t\\t\\tid,\\n\\t\\t\\ttitle\\n\\t\\t}\\n\\t}\\n}\",\"operationName\":\"updateBookMutation\",\"variables\":{\"id\":3}}"},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1742573520067,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_69bd7caf0d3a4582840f6c00dbebe190","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750162979948,"created":1750149892144,"url":"https://localhost:7098/graphql","name":"Mutation - DeleteBook","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation updateBookMutation {\\n\\tdeleteBook(input: { id: 1005 })\\n\\t{\\n\\t\\tboolean\\n\\t}\\n}\",\"operationName\":\"updateBookMutation\",\"variables\":{\"id\":3}}"},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1739129465956.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_aac5b0b0546e4ee4b7b3ccd47aa72aa9","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750167011713,"created":1750147833089,"url":"https://localhost:7098/graphql","name":"Query - Books","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query querybooks {\\n\\tbooks(first: 5) {\\n\\t\\tpageInfo {\\n\\t\\t\\thasNextPage,\\n\\t\\t\\thasPreviousPage,\\n\\t\\t\\tstartCursor,\\n\\t\\t\\tendCursor\\n\\t\\t},\\n\\t\\tedges {\\n\\t\\t\\tcursor,\\n\\t\\t\\tnode {\\n\\t\\t\\t\\tid,\\n\\t\\t\\t\\ttitle,\\n\\t\\t\\t\\tprice,\\n\\t\\t\\t\\tauthor {\\n\\t\\t\\t\\t\\tid,\\n\\t\\t\\t\\t\\tname\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tnodes {\\n\\t\\t\\tid,\\n\\t\\t\\ttitle,\\n\\t\\t\\tprice,\\n\\t\\t\\tauthor {\\n\\t\\t\\t\\tid,\\n\\t\\t\\t\\tname\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\",\"operationName\":\"querybooks\",\"variables\":{\"id\":3}}"},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1735685411846,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_075487f8bfd649f4af5ca59492f5acfe","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750167638842,"created":1750150138309,"url":"https://localhost:7098/graphql","name":"Query - Book","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query singleBook($id: ID!) {\\n  book(id: $id) {\\n\\t\\tid,\\n    price,\\n\\t\\tauthor {\\n\\t\\t\\tid,\\n\\t\\t\\tname\\n\\t\\t}\\n  }\\n}\",\"operationName\":\"singleBook\",\"variables\":{\"id\":2}}"},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1733963384790.75,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_3d9033195dd84565b4c35cbea0fe79c6","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750238106580,"created":1750149636959,"url":"https://localhost:7098/graphql","name":"Mutation - UpdateAuthor","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation updateAuthorMutation {\\n\\tupdateAuthor(input: { id: 1007, updatedAuthor: { name: \\\"Jarryd Deane\\\"}})\\n\\t{\\n\\t\\tauthor {\\n\\t\\t\\tid,\\n\\t\\t\\tname\\n\\t\\t},\\n\\t\\terrors {\\n\\t\\t\\t... on AuthorNotFoundError {\\n\\t\\t\\t\\tmessage\\n\\t\\t\\t},\\n\\t\\t\\t... on AuthorWithNameExistsError {\\n\\t\\t\\t\\tmessage\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\",\"operationName\":\"updateAuthorMutation\",\"variables\":{\"id\":3}}"},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1732241357735.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_5d52b5481cbf47d194895be94af671e9","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750162935137,"created":1750149745245,"url":"https://localhost:7098/graphql","name":"Mutation - DeleteAuthor","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation deleteAuthorMutation {\\n\\tdeleteAuthor(input: { id: 1008})\\n\\t{\\n\\t\\tboolean\\n\\t}\\n}\",\"operationName\":\"deleteAuthorMutation\",\"variables\":{\"id\":3}}"},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1730519330680.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_602fdfdcdf234a0bb9b706697842a14f","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750234032963,"created":1750148541512,"url":"https://localhost:7098/graphql","name":"Query - Authors","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query authorsQuery {\\n\\tauthors(first: 5, after: \\\"NA==\\\" order: { name: ASC}) {\\n\\t\\tpageInfo {\\n\\t\\t\\thasNextPage,\\n\\t\\t\\thasPreviousPage,\\n\\t\\t\\tstartCursor,\\n\\t\\t\\tendCursor\\n\\t\\t},\\n\\t\\tedges {\\n\\t\\t\\tcursor,\\n\\t\\t\\tnode {\\n\\t\\t\\t\\tid,\\n\\t\\t\\t\\tname\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tnodes {\\n\\t\\t\\tid,\\n\\t\\t\\tname\\n\\t\\t}\\n\\t}\\n}\",\"operationName\":\"authorsQuery\",\"variables\":{\"id\":3}}"},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1728797303625,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_8ae7120cce86461286e61fa0e68745c3","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750243381856,"created":1750154016655,"url":"https://localhost:7098/graphql","name":"Query - Author","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query singleAuthor($id: ID!) {\\n  author(id: $id) {\\n\\t\\tid,\\n\\t\\tname,\\n\\t\\tbooks {\\n\\t\\t\\tid,\\n\\t\\t\\ttitle,\\n\\t\\t\\tprice,\\n\\t\\t\\tauthorId\\n\\t\\t}\\n  }\\n}\",\"variables\":{\"id\":2},\"operationName\":\"singleAuthor\"}"},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1714989928915.625,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_521eed3ec41c4958a5e87291a5083167","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750324471973,"created":1750323628201,"url":"wss://localhost:7098/graphql","name":"Subscription - BookAdded","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"#this is an example subscription which connects using websockets. It doesn't work in Insomnia but if you copy and execute the below example into Nitro https://localhost:7098/graphql/ and then add a book using the addBook mutation this subscription will return the book that was added. The connection stays open until we close it so multiple addBook mutations can be executed and this subscription will return the books added\\n\\nsubscription {\\n\\tbookAdded {\\n\\t\\ttitle,\\n\\t\\tauthorId,\\n\\t\\tprice\\n\\t}\\n}\",\"variables\":{}}"},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1710847716502.8125,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7e467fe25354457ebcb670c025b9188b","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1750325080244,"created":1750324993837,"url":"wss://localhost:7098/graphql","name":"Subscription - BookUpdated","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"#this is an example subscription which connects using websockets. It doesn't work in Insomnia but if you copy and execute the below example into Nitro https://localhost:7098/graphql/ and then update a book using the updateBook mutation this subscription will return the book that was updated. The connection stays open until we close it so multiple updateBook mutations can be executed and this subscription will return the books updated. This mutation takes in a authorId as it only wants to be notified of books updated for a particular author\\n\\nsubscription {\\n  bookUpdated(authorId: 10) {\\n    title\\n  }\\n}\",\"variables\":{}}"},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/2023.5.8"},{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1708776610296.4062,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_27d20026967abd55a4a36965fade325d9f0efd24","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1721909189129,"created":1721909189129,"name":"Base Environment","data":{},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1721909189129,"_type":"environment"},{"_id":"jar_27d20026967abd55a4a36965fade325d9f0efd24","parentId":"wrk_0dbd329c66cd40a0b832cfd400c1c7ad","modified":1721909189132,"created":1721909189132,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"ws-payload_1999e061fdca4612bc775719900388f6","parentId":"ws-req_12d92cf3d56d4bbdae6f76794a3d8625","modified":1750325194616,"created":1750325170149,"name":"New Payload","value":"subscription {\n\tbookAdded {\n\t\ttitle,\n\t\tauthorId,\n\t\tprice\n\t}\n}","mode":"application/json","_type":"websocket_payload"}]}